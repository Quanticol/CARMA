fun int Mover(int zone) {
	if (zone == 4 || zone == 1) {
		return U(2,zone,3); 
	} else {
		return U(1,zone,4);
	}
}


component Agent(int a, int b){

    store{
        attrib zone := a;
        attrib state := b;
    }

    behaviour{
        A = contact*[z == my.zone && state == 1](z){state := 2;}.A +
        	contact*<zone>.A +
			recovery*{state := 3;}.A +
			susceptible*{state := 1;}.A +
			move*{zone := Mover(zone);}.A;
    }

    init{
        A
    }
}

measure Susceptibles = #{*| my.state == 1 };


system Simple{

    collective{
    	new Agent(1:4,1);
    	new Agent(1:4,2);
    	new Agent(1:4,3);
    }

    environment{

        store{
        }

        prob{
			default { return 1.0; }
        }

        rate{
        	move* 		{ return 1.0; }
			contact* 	{ return 0.03; }
			recovery*	{ return 0.2; }
			susceptible* { return 0.2; }
			default { return 1.0; }
        }

        update{
        }
    }
}