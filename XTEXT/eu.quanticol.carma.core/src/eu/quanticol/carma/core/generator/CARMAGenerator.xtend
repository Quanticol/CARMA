/*
 * generated by Xtext
 */
package eu.quanticol.carma.core.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import eu.quanticol.carma.core.carma.Model
import eu.quanticol.carma.core.carma.System
import com.google.inject.Inject
import eu.quanticol.carma.core.typing.TypeProvider
import eu.quanticol.carma.core.utils.LabelUtil
import eu.quanticol.carma.core.utils.Util
import static extension org.eclipse.xtext.EcoreUtil2.*
import eu.quanticol.carma.core.carma.ActionName
import eu.quanticol.carma.core.carma.ActionStub
import eu.quanticol.carma.core.carma.Rate
import eu.quanticol.carma.core.carma.Component
import eu.quanticol.carma.core.carma.Action
import java.util.HashMap
import eu.quanticol.carma.core.carma.UpdateAssignment
import java.util.HashSet
import eu.quanticol.carma.core.carma.VariableDeclaration

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class CARMAGenerator implements IGenerator {
	
	@Inject extension TypeProvider
	@Inject extension LabelUtil
	@Inject extension Util
	@Inject extension GenerateDefinitions
	@Inject extension GenerateFactory
	@Inject extension GenerateSystems
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		
		var Model model = resource.allContents.toIterable.filter(Model).get(0)
		var systems = resource.allContents.toIterable.filter(System)
		
		var modelName = model.label
		var URI = "carma" + "/" + modelName
		var packageName = "package carma." + modelName
		
		//Definitions
		fsa.generateFile(URI + "/" + modelName + "Definition.java",model.compileDefinitions(packageName,modelName))
		
		//Systems
		for(system : systems){
			fsa.generateFile(URI + "/" + system.label + ".java", system.compileSystem(packageName,system.label,modelName))
		}
		
		//Factory
		fsa.generateFile(URI + "/" + modelName + "Factory.java",model.compileFactory(packageName,modelName))
		
	}
	
}
