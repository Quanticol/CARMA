/*
 * generated by Xtext
 */
package eu.quanticol.carma.core;

import org.eclipse.xtext.generator.IOutputConfigurationProvider;

import com.google.inject.Binder;
import com.google.inject.Singleton;

import eu.quanticol.carma.core.generator.MyOutputConfigurationProvider;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class CARMARuntimeModule extends eu.quanticol.carma.core.AbstractCARMARuntimeModule {
	@Override
	public void configure(Binder binder) {
	    super.configure(binder);

	    binder.bind(IOutputConfigurationProvider.class).to(MyOutputConfigurationProvider.class).in(Singleton.class);
	}

	// This is not required for interpretation of double values, but any other
	// value converters added in the future should be integrated this way
	// (where CARMATerminalConverters extends DefaultTerminalConverters with
	// appropriate methods for each new rule that returns a non-String value.
//	@Override
//	public Class<? extends IValueConverterService> bindIValueConverterService() {
//		return CARMATerminalConverters.class;
//	}
}
